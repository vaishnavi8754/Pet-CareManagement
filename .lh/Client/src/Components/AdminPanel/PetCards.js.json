{
    "sourceFile": "Client/src/Components/AdminPanel/PetCards.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734615622009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734616326893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n           <img src={`http://localhost:4000/images/${pet.filename}`} alt={pet.name} />\n         </div>\n         <div className='pet-card-details'>\n           <h2>{pet.name}</h2>\n-          {pet.petStatus=== 'Home Pet' ? renderHomelessPetDetails() : renderHomePetDetails()}\n+          {pet.status=== 'Home Pet' ? renderHomelessPetDetails() : renderHomePetDetails()}\n           <p>{formatTimeAgo(pet.updatedAt)}</p>\n         </div>\n         <div className='app-rej-btn'>\n           <button onClick={deleteFormsAdoptedPet} disabled={isDeleting || isApproving}>\n@@ -173,9 +173,9 @@\n         {showApproved && (\n           <div className='popup'>\n             <div className='popup-content'>\n               <p>Approval Successful...</p>\n-              {pet.petStatus === 'Home Pet' && (\n+              {pet.status === 'Home Pet' && (\n                 <p>\n                   Please contact the owner at{' '}\n                   <a href={`mailto:${pet.email}`}>{pet.email}</a>{' '}or{' '}\n                   <a href={`tel:${pet.phone}`}>{pet.phone}</a>{' '}to arrange the transfer of the pet.\n"
                },
                {
                    "date": 1734616480571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n           <img src={`http://localhost:4000/images/${pet.filename}`} alt={pet.name} />\n         </div>\n         <div className='pet-card-details'>\n           <h2>{pet.name}</h2>\n-          {pet.status=== 'Home Pet' ? renderHomelessPetDetails() : renderHomePetDetails()}\n+          {pet.petStatus=== 'Home Pet' ? renderHomelessPetDetails() : renderHomePetDetails()}\n           <p>{formatTimeAgo(pet.updatedAt)}</p>\n         </div>\n         <div className='app-rej-btn'>\n           <button onClick={deleteFormsAdoptedPet} disabled={isDeleting || isApproving}>\n@@ -173,9 +173,9 @@\n         {showApproved && (\n           <div className='popup'>\n             <div className='popup-content'>\n               <p>Approval Successful...</p>\n-              {pet.status === 'Home Pet' && (\n+              {pet.petStatus === 'Home Pet' && (\n                 <p>\n                   Please contact the owner at{' '}\n                   <a href={`mailto:${pet.email}`}>{pet.email}</a>{' '}or{' '}\n                   <a href={`tel:${pet.phone}`}>{pet.phone}</a>{' '}to arrange the transfer of the pet.\n"
                },
                {
                    "date": 1734616943029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,5 +207,5 @@\n     </div>\n   );\n };\n \n-export default PetCards;\n+export default PetCards;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1734615622009,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { useAuthContext } from '../../hooks/UseAuthContext';\n\nconst PetCards = ({ pet, approveBtn, deleteBtnText, updateCards }) => {\n  const [showJustificationPopup, setShowJustificationPopup] = useState(false);\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\n  const [showApproved, setShowApproved] = useState(false);\n  const [showDeletedSuccess, setShowDeletedSuccess] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isApproving, setIsApproving] = useState(false);\n  const { user } = useAuthContext();\n\n  const truncateText = (text, maxLength) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const maxLength = 40;\n\n  const formatTimeAgo = (updatedAt) => {\n    const date = new Date(updatedAt);\n    return formatDistanceToNow(date, { addSuffix: true });\n  };\n\n  const handleApprove = async () => {\n    setIsApproving(true);\n    try {\n      const response = await fetch(`http://localhost:4000/approving/${pet._id}`, {\n        method: 'PUT',\n        body: JSON.stringify({ status: 'Approved' }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n      });\n\n      if (!response.ok) {\n        setShowErrorPopup(true);\n      } else {\n        setShowApproved(true);\n      }\n    } catch (err) {\n      setShowErrorPopup(true);\n    } finally {\n      setIsApproving(false);\n    }\n  };\n\n  const deleteFormsAdoptedPet = async () => {\n    setIsDeleting(true);\n    try {\n      const deleteResponses = await fetch(`http://localhost:4000/form/delete/many/${pet._id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      });\n      if (!deleteResponses.ok) throw new Error('Failed to delete forms');\n    } catch (err) {\n    } finally {\n      handleReject();\n    }\n  };\n\n  const handleReject = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/delete/${pet._id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      });\n\n      if (!response.ok) {\n        setShowErrorPopup(true);\n        throw new Error('Failed to delete pet');\n      } else {\n        setShowDeletedSuccess(true);\n      }\n    } catch (err) {\n      setShowErrorPopup(true);\n      console.error('Error deleting pet:', err);\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  const renderHomePetDetails = () => {\n    const { name,type,age, area, email, phone, justification } = pet;\n    return (\n      <div>\n        <p><b>Category:</b> {'Home Pet'}</p>\n        <p><b>Pet Name:</b> {name}</p>\n        <p><b>Pet Type:</b> {type}</p>\n        <p><b>Age:</b> {age}</p>\n        <p><b>Location:</b> {area}</p>\n        <p><b>Owner Email:</b> <a href={`mailto:${email}`}>{email}</a></p>\n        <p><b>Owner Phone:</b> <a href={`tel:${phone}`}>{phone}</a></p>\n        <p><b>Location:</b> {area}</p>\n        <p>\n          <b>Justification:</b>\n          <span>\n            {truncateText(justification || 'No justification provided.', maxLength)}\n            {justification && justification.length > maxLength && (\n              <span onClick={() => setShowJustificationPopup(true)} className='read-more-btn'>\n                Read More\n              </span>\n            )}\n          </span>\n        </p>\n      </div>\n    );\n  };\n\n  const renderHomelessPetDetails = () => {\n    const { posterName,type, area,email,phone, daysInLocation } = pet;\n    return (\n      <div>\n        <p><b>category:</b> {'Homeless Pet'}</p>\n        <p><b>Poster Name:</b> {posterName}</p>\n        <p><b>Pet Type:</b> {type}</p>\n        <p><b>Location:</b> {area}</p>\n        <p><b>Days in Location:</b> {daysInLocation}</p>\n        <p><b>Poster Email:</b> <a href={`mailto:${email}`}>{email}</a></p>\n        <p><b>Poster Phone:</b> <a href={`tel:${phone}`}>{phone}</a></p>\n      </div>\n    );\n  };\n\n  return (\n    <div className='req-container'>\n      <div className='pet-view-card'>\n        <div className='pet-card-pic'>\n          <img src={`http://localhost:4000/images/${pet.filename}`} alt={pet.name} />\n        </div>\n        <div className='pet-card-details'>\n          <h2>{pet.name}</h2>\n          {pet.petStatus=== 'Home Pet' ? renderHomelessPetDetails() : renderHomePetDetails()}\n          <p>{formatTimeAgo(pet.updatedAt)}</p>\n        </div>\n        <div className='app-rej-btn'>\n          <button onClick={deleteFormsAdoptedPet} disabled={isDeleting || isApproving}>\n            {isDeleting ? 'Deleting...' : deleteBtnText}\n          </button>\n          {approveBtn && (\n            <button disabled={isDeleting || isApproving} onClick={handleApprove}>\n              {isApproving ? 'Approving...' : 'Approve'}\n            </button>\n          )}\n        </div>\n        {showJustificationPopup && (\n          <div className='popup'>\n            <div className='popup-content'>\n              <h4>Justification:</h4>\n              <p>{pet.justification}</p>\n            </div>\n            <button onClick={() => setShowJustificationPopup(false)} className='close-btn'>\n              Close <i className='fa fa-times'></i>\n            </button>\n          </div>\n        )}\n        {showErrorPopup && (\n          <div className='popup'>\n            <div className='popup-content'>\n              <p>Oops!... Connection Error</p>\n            </div>\n            <button onClick={() => setShowErrorPopup(false)} className='close-btn'>\n              Close <i className='fa fa-times'></i>\n            </button>\n          </div>\n        )}\n        {showApproved && (\n          <div className='popup'>\n            <div className='popup-content'>\n              <p>Approval Successful...</p>\n              {pet.petStatus === 'Home Pet' && (\n                <p>\n                  Please contact the owner at{' '}\n                  <a href={`mailto:${pet.email}`}>{pet.email}</a>{' '}or{' '}\n                  <a href={`tel:${pet.phone}`}>{pet.phone}</a>{' '}to arrange the transfer of the pet.\n                </p>\n              )}\n            </div>\n            <button onClick={() => {\n              setShowApproved(false);\n              updateCards();\n            }} className='close-btn'>\n              Close <i className='fa fa-times'></i>\n            </button>\n          </div>\n        )}\n        {showDeletedSuccess && (\n          <div className='popup'>\n            <div className='popup-content'>\n              <p>Deleted Successfully from Database...</p>\n            </div>\n            <button onClick={() => {\n              setShowDeletedSuccess(false);\n              updateCards();\n            }} className='close-btn'>\n              Close <i className='fa fa-times'></i>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PetCards;\n"
        }
    ]
}