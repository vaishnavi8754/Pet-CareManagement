{
    "sourceFile": "server/Model/PetModel.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1734596388302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734596525487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,13 +99,9 @@\n     status: {\n       type: String,\n       required: true,\n     },\n-    petstatus: {\n-      type: String,\n-      required: true,\n-      enum: ['Home Pet', 'Homeless Pet'],\n-    },\n+    \n   },\n   { timestamps: true }\n );\n \n"
                },
                {
                    "date": 1734596985507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,14 @@\n-/*const mongoose = require('mongoose')\n-const schema = mongoose.Schema;\n-\n-const PetSchema = new schema({\n-    name: {\n-        type: String,\n-        required: true\n-    },\n-    age: {\n-        type: String,\n-        required: true\n-    },\n-    area: {\n-        type: String,\n-        required: true\n-    },\n-    justification: {\n-        type: String,\n-        required: true\n-    },\n-    email: {\n-        type: String,\n-        required: true\n-    },\n-    phone: {\n-        type: String,\n-        required: true\n-    },\n-    type: {\n-        type: String,\n-        required: true\n-    },\n-    filename: {\n-        type: String,\n-        required: true\n-    },\n-    status: {\n-        type: String,\n-        required: true\n-    }\n-}, {timestamps: true})\n-\n-module.exports = mongoose.model('Pet', PetSchema);*/\n const mongoose = require('mongoose');\n const schema = mongoose.Schema;\n \n const PetSchema = new schema(\n   {\n+    petStatus: {\n+      type: String,\n+      required: true,\n+      enum: ['Home Pet', 'Homeless Pet'],\n+    },\n     name: {\n       type: String,\n       required: function () {\n         return this.petStatus === 'Home Pet';\n@@ -54,9 +16,9 @@\n     },\n     age: {\n       type: String,\n       required: function () {\n-        return this.petstatus === 'Home Pet';\n+        return this.petStatus === 'Home Pet';\n       },\n     },\n     area: {\n       type: String,\n@@ -99,94 +61,9 @@\n     status: {\n       type: String,\n       required: true,\n     },\n-    \n   },\n   { timestamps: true }\n );\n \n module.exports = mongoose.model('Pet', PetSchema);\n-/*const mongoose = require('mongoose');\n-const schema = mongoose.Schema;\n-\n-const PetSchema = new schema(\n-  {\n-    name: {\n-      type: String,\n-      required: function () {\n-        return this.status === 'Home Pet';\n-      },\n-    },\n-    age: {\n-      type: String,\n-      required: function () {\n-        return this.status === 'Home Pet';\n-      },\n-    },\n-    area: {\n-      type: String,\n-      required: true,\n-    },\n-    justification: {\n-      type: String,\n-      required: function () {\n-        return this.status === 'Home Pet';\n-      },\n-    },\n-    email: {\n-      type: String,\n-      required: true,\n-      validate: {\n-        validator: function (email) {\n-          const emailPattern = /^[a-zA-Z0-9._-]+@gmail\\.com$/;\n-          return emailPattern.test(email);\n-        },\n-        message: 'Please provide a valid Gmail address.',\n-      },\n-    },\n-    phone: {\n-      type: String,\n-      required: true,\n-      validate: {\n-        validator: function (phone) {\n-          const phonePattern = /^[0-9]{10}$/;\n-          return phonePattern.test(phone);\n-        },\n-        message: 'Please provide a valid 10-digit phone number.',\n-      },\n-    },\n-    posterName: {\n-      type: String,\n-      required: function () {\n-        return this.status === 'Homeless Pet';\n-      },\n-    },\n-    daysInLocation: {\n-      type: String,\n-      required: function () {\n-        return this.status === 'Homeless Pet';\n-      },\n-    },\n-    status: {\n-      type: String,\n-      required: true,},\n-\n-    type: {\n-      type: String,\n-      required: true,\n-      enum: ['Dog', 'Cat', 'Rabbit', 'Bird', 'Fish', 'Other'],\n-    },\n-    filename: {\n-      type: String,\n-      required: true,\n-    },\n-    petstatus: {\n-      type: String,\n-      required: true,\n-      enum: ['Home Pet', 'Homeless Pet'],\n-    },\n-  },\n-  { timestamps: true }\n-);\n-\n-module.exports = mongoose.model('Pet', PetSchema);*/\n"
                },
                {
                    "date": 1734597883804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,20 +5,20 @@\n   {\n     petStatus: {\n       type: String,\n       required: true,\n-      enum: ['Home Pet', 'Homeless Pet'],\n+      enum: ['HomePet', 'HomelessPet'],\n     },\n     name: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Home Pet';\n+        return this.petStatus === 'HomePet';\n       },\n     },\n     age: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Home Pet';\n+        return this.petStatus === 'HomePet';\n       },\n     },\n     area: {\n       type: String,\n@@ -26,9 +26,9 @@\n     },\n     justification: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Home Pet';\n+        return this.petStatus === 'HomePet';\n       },\n     },\n     email: {\n       type: String,\n@@ -40,15 +40,15 @@\n     },\n     posterName: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Homeless Pet';\n+        return this.petStatus === 'HomelessPet';\n       },\n     },\n     daysInLocation: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Homeless Pet';\n+        return this.petStatus === 'HomelessPet';\n       },\n     },\n     type: {\n       type: String,\n"
                },
                {
                    "date": 1734598510373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,23 @@\n const mongoose = require('mongoose');\n const schema = mongoose.Schema;\n \n const PetSchema = new schema(\n-  {\n-    petStatus: {\n-      type: String,\n+  {status:{\n+    type: String,\n       required: true,\n-      enum: ['HomePet', 'HomelessPet'],\n-    },\n+      enum: ['Home Pet', 'Homeless Pet'], \n+  },\n     name: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'HomePet';\n+        return this.status === 'Home Pet';\n       },\n     },\n     age: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'HomePet';\n+        return this.status === 'Home Pet';\n       },\n     },\n     area: {\n       type: String,\n@@ -26,9 +25,9 @@\n     },\n     justification: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'HomePet';\n+        return this.status === 'Home Pet';\n       },\n     },\n     email: {\n       type: String,\n@@ -40,15 +39,15 @@\n     },\n     posterName: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'HomelessPet';\n+        return this.status === 'Homeless Pet';\n       },\n     },\n     daysInLocation: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'HomelessPet';\n+        return this.status === 'Homeless Pet';\n       },\n     },\n     type: {\n       type: String,\n@@ -61,8 +60,15 @@\n     status: {\n       type: String,\n       required: true,\n     },\n+    petStatus: {\n+      type: String,\n+      enum: ['Home Pet', 'Homeless Pet'],\n+      default: 'Home Pet', // Ensure these are the only allowed values\n+    },\n+    \n+\n   },\n   { timestamps: true }\n );\n \n"
                },
                {
                    "date": 1734599393558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,15 +9,15 @@\n   },\n     name: {\n       type: String,\n       required: function () {\n-        return this.status === 'Home Pet';\n+        return this.petStatus === 'Home Pet';\n       },\n     },\n     age: {\n       type: String,\n       required: function () {\n-        return this.status === 'Home Pet';\n+        return this.petStatus === 'Home Pet';\n       },\n     },\n     area: {\n       type: String,\n@@ -25,9 +25,9 @@\n     },\n     justification: {\n       type: String,\n       required: function () {\n-        return this.status === 'Home Pet';\n+        return this.petStatus === 'Home Pet';\n       },\n     },\n     email: {\n       type: String,\n@@ -39,15 +39,15 @@\n     },\n     posterName: {\n       type: String,\n       required: function () {\n-        return this.status === 'Homeless Pet';\n+        return this.petStatus === 'Homeless Pet';\n       },\n     },\n     daysInLocation: {\n       type: String,\n       required: function () {\n-        return this.status === 'Homeless Pet';\n+        return this.petStatus === 'Homeless Pet';\n       },\n     },\n     type: {\n       type: String,\n"
                },
                {
                    "date": 1734601434363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,9 @@\n const mongoose = require('mongoose');\n const schema = mongoose.Schema;\n \n const PetSchema = new schema(\n-  {status:{\n-    type: String,\n-      required: true,\n-      enum: ['Home Pet', 'Homeless Pet'], \n-  },\n+  {\n     name: {\n       type: String,\n       required: function () {\n         return this.petStatus === 'Home Pet';\n"
                },
                {
                    "date": 1734615625382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,23 @@\n const mongoose = require('mongoose');\n const schema = mongoose.Schema;\n \n const PetSchema = new schema(\n-  {\n+  {status:{\n+    type: String,\n+      required: true,\n+      enum: ['Home Pet', 'Homeless Pet'], \n+  },\n     name: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Home Pet';\n+        return this.status === 'Home Pet';\n       },\n     },\n     age: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Home Pet';\n+        return this.status === 'Home Pet';\n       },\n     },\n     area: {\n       type: String,\n@@ -21,9 +25,9 @@\n     },\n     justification: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Home Pet';\n+        return this.status === 'Home Pet';\n       },\n     },\n     email: {\n       type: String,\n@@ -35,15 +39,15 @@\n     },\n     posterName: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Homeless Pet';\n+        return this.status === 'Homeless Pet';\n       },\n     },\n     daysInLocation: {\n       type: String,\n       required: function () {\n-        return this.petStatus === 'Homeless Pet';\n+        return this.status === 'Homeless Pet';\n       },\n     },\n     type: {\n       type: String,\n@@ -68,4 +72,5 @@\n   { timestamps: true }\n );\n \n module.exports = mongoose.model('Pet', PetSchema);\n+\n"
                }
            ],
            "date": 1734596388302,
            "name": "Commit-0",
            "content": "/*const mongoose = require('mongoose')\nconst schema = mongoose.Schema;\n\nconst PetSchema = new schema({\n    name: {\n        type: String,\n        required: true\n    },\n    age: {\n        type: String,\n        required: true\n    },\n    area: {\n        type: String,\n        required: true\n    },\n    justification: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        required: true\n    },\n    phone: {\n        type: String,\n        required: true\n    },\n    type: {\n        type: String,\n        required: true\n    },\n    filename: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    }\n}, {timestamps: true})\n\nmodule.exports = mongoose.model('Pet', PetSchema);*/\nconst mongoose = require('mongoose');\nconst schema = mongoose.Schema;\n\nconst PetSchema = new schema(\n  {\n    name: {\n      type: String,\n      required: function () {\n        return this.petStatus === 'Home Pet';\n      },\n    },\n    age: {\n      type: String,\n      required: function () {\n        return this.petstatus === 'Home Pet';\n      },\n    },\n    area: {\n      type: String,\n      required: true,\n    },\n    justification: {\n      type: String,\n      required: function () {\n        return this.petStatus === 'Home Pet';\n      },\n    },\n    email: {\n      type: String,\n      required: true,\n    },\n    phone: {\n      type: String,\n      required: true,\n    },\n    posterName: {\n      type: String,\n      required: function () {\n        return this.petStatus === 'Homeless Pet';\n      },\n    },\n    daysInLocation: {\n      type: String,\n      required: function () {\n        return this.petStatus === 'Homeless Pet';\n      },\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    filename: {\n      type: String,\n      required: true,\n    },\n    status: {\n      type: String,\n      required: true,\n    },\n    petstatus: {\n      type: String,\n      required: true,\n      enum: ['Home Pet', 'Homeless Pet'],\n    },\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model('Pet', PetSchema);\n/*const mongoose = require('mongoose');\nconst schema = mongoose.Schema;\n\nconst PetSchema = new schema(\n  {\n    name: {\n      type: String,\n      required: function () {\n        return this.status === 'Home Pet';\n      },\n    },\n    age: {\n      type: String,\n      required: function () {\n        return this.status === 'Home Pet';\n      },\n    },\n    area: {\n      type: String,\n      required: true,\n    },\n    justification: {\n      type: String,\n      required: function () {\n        return this.status === 'Home Pet';\n      },\n    },\n    email: {\n      type: String,\n      required: true,\n      validate: {\n        validator: function (email) {\n          const emailPattern = /^[a-zA-Z0-9._-]+@gmail\\.com$/;\n          return emailPattern.test(email);\n        },\n        message: 'Please provide a valid Gmail address.',\n      },\n    },\n    phone: {\n      type: String,\n      required: true,\n      validate: {\n        validator: function (phone) {\n          const phonePattern = /^[0-9]{10}$/;\n          return phonePattern.test(phone);\n        },\n        message: 'Please provide a valid 10-digit phone number.',\n      },\n    },\n    posterName: {\n      type: String,\n      required: function () {\n        return this.status === 'Homeless Pet';\n      },\n    },\n    daysInLocation: {\n      type: String,\n      required: function () {\n        return this.status === 'Homeless Pet';\n      },\n    },\n    status: {\n      type: String,\n      required: true,},\n\n    type: {\n      type: String,\n      required: true,\n      enum: ['Dog', 'Cat', 'Rabbit', 'Bird', 'Fish', 'Other'],\n    },\n    filename: {\n      type: String,\n      required: true,\n    },\n    petstatus: {\n      type: String,\n      required: true,\n      enum: ['Home Pet', 'Homeless Pet'],\n    },\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model('Pet', PetSchema);*/\n"
        }
    ]
}